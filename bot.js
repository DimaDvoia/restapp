const TelegramBot = require('node-telegram-bot-api');
require('dotenv').config();
const fetch = require('node-fetch');

const BOT_TOKEN = process.env.BOT_TOKEN;
const WEBAPP_URL = process.env.WEBAPP_URL || 'https://dimadvoia.github.io/restapp/';

const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    const firstName = msg.from.first_name;
    
    const keyboard = {
        reply_markup: {
            keyboard: [[
                {
                    text: 'üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
                    request_contact: true
                }
            ]],
            resize_keyboard: true,
            inline_keyboard: [[
                {
                    text: 'üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                    web_app: { url: WEBAPP_URL }
                }
            ]]
        }
    };
    
    const welcomeMessage = `
üëã –ü—Ä–∏–≤–µ—Ç, ${firstName}!

–Ø –±–æ—Ç —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –±–∞—Ä–∞–Ω–∂–∞—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –æ—Ç–∫—Ä—ã—Ç—å –Ω–∞—à–µ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. 
–î–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Å—å —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üì±

üí° –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ç—ã —Å–º–æ–∂–µ—à—å:
‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –º–µ–Ω—é
‚Ä¢ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª
‚Ä¢ –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ –≤—ã–Ω–æ—Å
‚Ä¢ –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º 
‚Ä¢ –ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!
    `;
    
    await bot.sendMessage(chatId, welcomeMessage, keyboard);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
bot.on('contact', async (msg) => {
    const chatId = msg.chat.id;
    const phoneNumber = msg.contact.phone_number;
    const userId = msg.from.id;
    const firstName = msg.from.first_name;

    try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        const response = await fetch(`${process.env.SERVER_URL}/api/update-phone`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                telegram_id: userId,
                phone_number: phoneNumber,
                first_name: firstName
            })
        });

        if (response.ok) {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            const newKeyboard = {
                reply_markup: {
                    inline_keyboard: [[
                        {
                            text: 'üöÄ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                            web_app: { url: WEBAPP_URL }
                        }
                    ]],
                    remove_keyboard: true
                }
            };
            
            await bot.sendMessage(chatId, '–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è üéâ', newKeyboard);
        }
    } catch (error) {
        console.error('Error updating phone number:', error);
        await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
});

console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω! üöÄ'); 